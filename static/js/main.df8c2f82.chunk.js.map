{"version":3,"sources":["components/mogPics.js","components/ImageGrid.jsx","components/Modal.jsx","App.js","serviceWorker.js","index.js"],"names":["mogPics","ImageGrid","setSelectedImg","useState","images","setImages","useEffect","shuf","a","i","length","j","Math","floor","random","shuffle","pics","className","map","doc","idx","div","key","layout","whileHover","opacity","cursor","onClick","img","src","alt","initial","animate","transition","delay","Modal","selectedImg","e","target","classList","contains","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mOA2IeA,EA3IC,CACd,uDACA,sDACA,uDACA,sDACA,sDACA,uDACA,sDACA,sDACA,uDACA,sDACA,uDACA,sDACA,uDACA,sDACA,sDACA,sDACA,sDACA,sDACA,uDACA,sDACA,sDACA,sDACA,uDACA,sDACA,qDACA,qDACA,qDACA,qDACA,sDACA,qDACA,qDACA,qDACA,sDACA,qDACA,qDACA,qDACA,qDACA,qDACA,qDACA,oDACA,qDACA,oDACA,sDACA,sDACA,qDACA,sDACA,sDACA,qDACA,qDACA,oDACA,qDACA,sDACA,qDACA,sDACA,qDACA,qDACA,qDACA,qDACA,qDACA,qDACA,sDACA,sDACA,sDACA,qDACA,qDACA,qDACA,sDACA,qDACA,qDACA,qDACA,sDACA,sDACA,qDACA,qDACA,sDACA,qDACA,qDACA,qDACA,sDACA,qDACA,sDACA,sDACA,qDACA,qDACA,sDACA,qDACA,qDACA,qDACA,qDACA,qDACA,oDACA,qDACA,sDACA,qDACA,qDACA,qDACA,qDACA,sDACA,qDACA,qDACA,qDACA,oDACA,qDACA,qDACA,qDACA,sDACA,qDACA,qDACA,qDACA,sDACA,qDACA,qDACA,oDACA,qDACA,sDACA,qDACA,qDACA,qDACA,qDACA,qDACA,sDACA,qDACA,qDACA,sDACA,qDACA,oDACA,oDACA,sDACA,qDACA,qDACA,qDACA,qDACA,qDACA,qDACA,sDACA,uD,OC5HF,IAmCeC,EAnCG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAAqB,EACZC,qBADY,mBACjCC,EADiC,KACzBC,EADyB,KAWxC,OARAC,qBAAU,YACK,WACX,IAAIC,EAbV,SAAiBC,GACf,IAAK,IAAIC,EAAID,EAAEE,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACrC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADL,EAErB,CAACD,EAAEG,GAAIH,EAAEC,IAAvBD,EAAEC,GAFiC,KAE7BD,EAAEG,GAF2B,KAIvC,OAAOH,EAQQO,CAAQf,GACZK,EAAUE,GAEnBS,KACC,IAGD,yBAAKC,UAAU,YACZb,GACCA,EAAOc,KAAI,SAACC,EAAKC,GAAN,OACT,kBAAC,IAAOC,IAAR,CACEJ,UAAU,WACVK,IAAKF,EACLG,QAAM,EACNC,WAAY,CAAEC,QAAS,EAAGC,OAAQ,YAClCC,QAAS,kBAAMzB,EAAeiB,KAE9B,kBAAC,IAAOS,IAAR,CACEC,IAAG,0BAAqBV,GACxBW,IAAI,eACJC,QAAS,CAAEN,QAAS,GACpBO,QAAS,CAAEP,QAAS,GACpBQ,WAAY,CAAEC,MAAO,WCjBpBC,EAnBD,SAAC,GAAqC,IAAnCjC,EAAkC,EAAlCA,eAAgBkC,EAAkB,EAAlBA,YAO/B,OACE,kBAAC,IAAOf,IAAR,CACEJ,UAAU,WACVU,QATgB,SAACU,GACfA,EAAEC,OAAOC,UAAUC,SAAS,aAC9BtC,EAAe,OAQf6B,QAAS,CAAEN,QAAS,GACpBO,QAAS,CAAEP,QAAS,IAEpB,kBAAC,IAAOG,IAAR,CAAYC,IAAG,0BAAqBO,GAAeN,IAAI,mBCD9CW,EAZH,WAAO,IAAD,EACsBtC,mBAAS,MAD/B,mBACTiC,EADS,KACIlC,EADJ,KAEhB,OACE,yBAAKe,UAAU,OACb,kBAAC,EAAD,CAAWf,eAAgBA,IAC1BkC,GACC,kBAAC,EAAD,CAAOA,YAAaA,EAAalC,eAAgBA,MCErCwC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.df8c2f82.chunk.js","sourcesContent":["const mogPics = [\n  '100636292_3833421836674720_2615574915067150336_n.jpg',\n  '100647080_176164977134107_6554608109355008000_n.jpg',\n  '103579534_1107192489667865_8426516277149071002_n.jpg',\n  '103782451_927536247763359_5967409042729562121_n.jpg',\n  '104041614_606207656664706_2023762509686829464_n.jpg',\n  '104297756_2618081115186073_8125130095370273129_n.jpg',\n  '104383050_710424356408804_2651173936739413244_n.jpg',\n  '104628372_616470522305274_6658807485886412319_n.jpg',\n  '104638768_1429931740728862_8589012729024908523_n.jpg',\n  '104818984_695945710962965_7943443961377419570_n.jpg',\n  '104945347_2601107193439646_3094278471170501904_n.jpg',\n  '105015077_621080528503500_2502719415218976496_n.jpg',\n  '105414579_1498744796993959_5939195748271730183_n.jpg',\n  '105569237_397460087878468_7030805747249900760_n.jpg',\n  '105752548_714471286032725_1281888137139163846_n.jpg',\n  '106079707_710305513116785_4241397734030886607_n.jpg',\n  '106169505_362357188083351_7330632192191039383_n.jpg',\n  '106202456_267919674295011_7264972498829795399_n.jpg',\n  '106203542_3025679580802674_2503856762183233533_n.jpg',\n  '106339230_557646274931372_8199058242698741282_n.jpg',\n  '106343613_582738242427011_5299538801413762851_n.jpg',\n  '106529706_701720317052016_5846781188254427529_n.jpg',\n  '106539916_3203211713102380_6817760465625931890_n.jpg',\n  '106778738_574781866566201_1054541199404152813_n.jpg',\n  '39099568_315199495892293_3644003687338082304_n.jpg',\n  '40377704_241838493072047_7436175341137166336_n.jpg',\n  '40568584_229752714367224_4324118334254612480_n.jpg',\n  '46503579_353789792045955_5302128927819431936_n.jpg',\n  '49351397_2097297700337544_2843573563212955648_n.jpg',\n  '49612788_763235870706130_4499097290463510528_n.jpg',\n  '49948416_274313476577613_1782460407647043584_n.jpg',\n  '51695056_377682826393916_7535337434398064640_n.jpg',\n  '52319870_2475532639184710_8889155737922568192_n.jpg',\n  '52905714_386103042212584_1660066720317964288_n.jpg',\n  '53788949_306436076706766_6454746769648517120_n.jpg',\n  '54520103_269743250617810_7086600037290999808_n.jpg',\n  '56164158_345010539555036_1465301442481881088_n.jpg',\n  '56578080_671647263292811_1725072927243632640_n.jpg',\n  '56656136_344467329513819_3474135149505937408_n.jpg',\n  '56691271_289657578613810_693473429726167040_n.jpg',\n  '56881393_275248813421073_3524085524669136896_n.jpg',\n  '58694127_598255267341973_740122744565268480_n.jpg',\n  '58831623_2241577799228571_1696052576253902848_n.jpg',\n  '58883045_1543785859086502_2697800234293002240_n.jpg',\n  '59550532_404724417034931_6791063427847553024_n.jpg',\n  '59863037_2224890050879808_3240213260422610944_n.jpg',\n  '60183690_1267525566747666_3512879044460806144_n.jpg',\n  '60356361_672488409857851_8192960329722888192_n.jpg',\n  '64767388_439112066880161_8186406493097033728_n.jpg',\n  '67370835_2447528071997837_83175756833751040_n.jpg',\n  '67781067_647719089071769_1303138776058429440_n.jpg',\n  '67788296_3040383249321723_2592940076639977472_n.jpg',\n  '67891416_510026856412129_6159726157576011776_n.jpg',\n  '68364851_2370628576553549_6952363321240584192_n.jpg',\n  '68719547_669142710253469_1655258633279111168_n.jpg',\n  '68862849_654639175044639_2948248736624541696_n.jpg',\n  '68906351_488822038598807_3977833559472734208_n.jpg',\n  '69010797_478242776066061_6957555249506680832_n.jpg',\n  '69209524_434061593983710_3505196829731979264_n.jpg',\n  '69662161_519435685495931_7630505495836491776_n.jpg',\n  '69753509_2366576253566203_6721975919658926080_n.jpg',\n  '69831043_2650841204947127_8424659680604717056_n.jpg',\n  '70018709_1297555680419308_5741920638193369088_n.jpg',\n  '70124879_696184250890970_1364506668943015936_n.jpg',\n  '70165992_684370688707076_5124168937889595392_n.jpg',\n  '70867699_390087648369608_7296301660899377152_n.jpg',\n  '71688112_2455104411480957_7669896174211432448_n.jpg',\n  '72467467_465719927363733_1615802267674345472_n.jpg',\n  '72756401_401103094156522_3334111656513896448_n.jpg',\n  '73173350_414780359466290_8494468498485936128_n.jpg',\n  '74209239_3050054228343748_7801321129791979520_n.jpg',\n  '75418887_2573251099428060_6118456353699659776_n.jpg',\n  '75419055_514898019093657_5390905468036055040_n.jpg',\n  '77034678_493666361245062_7982109076513357824_n.jpg',\n  '79789124_1035114473500032_7327552371226050560_n.jpg',\n  '81239186_1173144596214302_392812868464017408_n.jpg',\n  '81394170_770131066799291_3453535859289096192_n.jpg',\n  '81416965_541024706493275_1329239365330665472_n.jpg',\n  '81551082_2666523570132698_3334738360961859584_n.jpg',\n  '81930682_571745536708943_1095246506207739904_n.jpg',\n  '82075931_3519713268071362_5298543781178507264_n.jpg',\n  '82253717_3980382185370397_3292287645031876008_n.jpg',\n  '82828804_466451100923162_5012236296244953088_n.jpg',\n  '83442836_774293069749952_6988502026472652800_n.jpg',\n  '84142916_2958748870875595_5421312715505270784_n.jpg',\n  '84571992_293643774940049_8534114839084138496_n.jpg',\n  '84665341_908191476317464_1555089992957558784_n.jpg',\n  '86174546_829723730787007_2516171693752320000_n.jpg',\n  '86350334_190859272152940_7760823823028453376_n.jpg',\n  '87053228_249998305995159_2725136193598521344_n.jpg',\n  '87256359_822462304884678_345931152944529408_n.jpg',\n  '87294795_504838250219120_3314206458781892608_n.jpg',\n  '87481433_2772290866199755_3352417687597744128_n.jpg',\n  '87511812_848701862235997_8009604417760264192_n.jpg',\n  '87531684_199240698125192_7020308578581872640_n.jpg',\n  '88126527_195245648351070_4290850556961882112_n.jpg',\n  '88983236_578323339438462_7467228826565607424_n.jpg',\n  '89091326_2792907530792489_1188276992487718912_n.jpg',\n  '89256481_153398709129246_1478554848268910592_n.jpg',\n  '89377413_741460569593842_4020902520854413312_n.jpg',\n  '89435965_163328311340761_3135052236015534080_n.jpg',\n  '89499094_758028684604810_814136687616589824_n.jpg',\n  '89550187_238486047290080_7136597317792038912_n.jpg',\n  '89966402_577809702832399_7060875579779710976_n.jpg',\n  '89978486_239972587135273_3049815680858718208_n.jpg',\n  '90004330_3031572660251635_7016948642846081024_n.jpg',\n  '90062535_245649436473123_2374451349375942656_n.jpg',\n  '90182936_586228051965004_5057471166684332032_n.jpg',\n  '90439391_210217960074610_6673515468650708992_n.jpg',\n  '90782974_2710242839206578_6476945720434753536_n.jpg',\n  '90960216_679529162816540_4245241036525273088_n.jpg',\n  '90999317_215499922864228_5207786307555688448_n.jpg',\n  '91124227_851854851981466_430719901926162432_n.jpg',\n  '91130977_648569519310432_6381788095766855680_n.jpg',\n  '91439386_1079793222413577_5154134658425815040_n.jpg',\n  '92097798_942283542862114_3209725177373917184_n.jpg',\n  '92134303_227656308470974_1109420907601854464_n.jpg',\n  '92134441_600904737162720_5052977844913700864_n.jpg',\n  '92186698_571069623507193_7738971278534508544_n.jpg',\n  '92622691_547729376144449_6232121151359811584_n.jpg',\n  '93378861_2617533255154541_7276329873994416128_n.jpg',\n  '93854638_237324927472166_3290223760832987136_n.jpg',\n  '93959424_230590141357906_6364256597610332160_n.jpg',\n  '94516040_2662353567363738_2488976652323782656_n.jpg',\n  '94889344_535824044036761_6200086081220640768_n.jpg',\n  '95024747_226683462118368_304594089880322048_n.png',\n  '95367663_941417146280265_151174014071472128_n.jpg',\n  '95440748_3659100957449836_3054620482247589888_n.jpg',\n  '95704926_583123242257053_1344478738225561600_n.jpg',\n  '96019422_239294880626690_4905762158601568256_n.jpg',\n  '96288740_958096181293995_3753261333156462592_n.jpg',\n  '96405858_245531880104573_6512453396186791936_n.jpg',\n  '98471888_593534341281737_7965843803435171840_n.jpg',\n  '99252536_721637628579433_6826606588619390976_n.jpg',\n  '99295666_1296901357180756_2546462989989445632_n.jpg',\n  '99423830_1083177222067905_7239727492683005952_n.jpg',\n]\n\nexport default mogPics\n","import React, { useState, useEffect } from 'react'\nimport mogPics from './mogPics'\nimport { motion } from 'framer-motion'\n\nfunction shuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1))\n    ;[a[i], a[j]] = [a[j], a[i]]\n  }\n  return a\n}\n\nconst ImageGrid = ({ setSelectedImg }) => {\n  const [images, setImages] = useState()\n\n  useEffect(() => {\n    const pics = () => {\n      let shuf = shuffle(mogPics)\n      return setImages(shuf)\n    }\n    pics()\n  }, [])\n\n  return (\n    <div className=\"img-grid\">\n      {images &&\n        images.map((doc, idx) => (\n          <motion.div\n            className=\"img-wrap\"\n            key={idx}\n            layout\n            whileHover={{ opacity: 1, cursor: 'pointer ' }}\n            onClick={() => setSelectedImg(doc)}\n          >\n            <motion.img\n              src={`images/mog-pics/${doc}`}\n              alt=\"uploaded pic\"\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ delay: 1 }}\n            />\n          </motion.div>\n        ))}\n    </div>\n  )\n}\n\nexport default ImageGrid\n","import React from 'react'\nimport { motion } from 'framer-motion'\n\nconst Modal = ({ setSelectedImg, selectedImg }) => {\n  const handleClick = (e) => {\n    if (e.target.classList.contains('backdrop')) {\n      setSelectedImg(null)\n    }\n  }\n\n  return (\n    <motion.div\n      className=\"backdrop\"\n      onClick={handleClick}\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n    >\n      <motion.img src={`images/mog-pics/${selectedImg}`} alt=\"enlarged pic\" />\n    </motion.div>\n  )\n}\n\nexport default Modal\n","import React, { useState } from 'react'\nimport ImageGrid from './components/ImageGrid'\nimport Modal from './components/Modal'\n\nconst App = () => {\n  const [selectedImg, setSelectedImg] = useState(null)\n  return (\n    <div className=\"App\">\n      <ImageGrid setSelectedImg={setSelectedImg} />\n      {selectedImg && (\n        <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} />\n      )}\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}